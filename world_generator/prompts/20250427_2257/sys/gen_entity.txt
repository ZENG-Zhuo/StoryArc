**INSTRUCTION:**  
Your task is to generate a **full JSON game data** from a partial `"levelList"` input.

---

**Input Format:**  
You are given a partial JSON input like this:
```json
"levelList": [
    {
        "storyArc": "Rise",
        "levelIndex": 1,
        "storyline": "You find yourself at the edge of a dense, foggy forest. An old man leans on a wooden staff near a worn signpost.",
        "nextLevel": [
            {
                "criteriaDescription": "Take the left path",
                "index": 2
            },
            {
                "criteriaDescription": "Take the right path",
                "index": 3
            }
        ]
    },
    {
        "storyArc": "Rise",
        "levelIndex": 2,
        "storyline": "You venture deeper into the woods, guided by whispers.",
        "nextLevel": [
            {
                "criteriaDescription": "Follow the river",
                "index": 4
            },
            {
                "criteriaDescription": "Climb the hill",
                "index": 5
            }
        ]
    }
]
```

---

**Your Output Format Must Be:**  
- Add a **`playerData`** field at the top level.  
- Each node inside `"levelList"` must keep its original fields and have an additional `"entity"` field appended.
- `"entity"` contains:
  - `tileData` (random fitting color values)
  - `NPCList` (one or more NPCs with name, description, dialogue, stats, friendliness, and optionally a `door`)
  - `itemList` (optional, only if it fits naturally)
  - `doorList` (must correspond to each `nextLevel`'s `index`)
- If a path leads to an ending (like menu/black screen), use `-1` as the `doorList.index`.

---

**Rules and Requirements:**  
1. `doorList`'s indices must exactly match the `nextLevel`'s indices.  
2. Each level can have 0 or more NPCs and items.  
3. Each NPC must have `NPCName`, `description`, `dialogue`, `attack`, `health`, `friend`, and optionally `door`.  
4. `door` inside an NPC is optional. If present, it should also match a `nextLevel.index` or `-1`.  
5. Make the environment colorful and the gameplay balanced.  
6. `itemList` is optional but encouraged if fitting.
7. Tile colors can be creatively chosen to match the scene vibe.
8. Keep the story natural and immersive â€” expand only where it fits.

---

**Example Output:**  
```json
{
    "playerData": {
        "health": 100,
        "attack": 0,
        "description": "A young wizard with a flowing red hat.",
        "spriteAddress": "Sprites/RedHat"
    },
    "levelList": [
        {
            "storyArc": "Rise",
            "levelIndex": 1,
            "storyline": "You find yourself at the edge of a dense, foggy forest. An old man leans on a wooden staff near a worn signpost.",
            "nextLevel": [
                {
                    "criteriaDescription": "Take the left path",
                    "index": 2
                },
                {
                    "criteriaDescription": "Take the right path",
                    "index": 3
                }
            ],
            "entity": {
                "tileData": {
                    "r": 0.2,
                    "g": 0.4,
                    "b": 0.6,
                    "a": 1.0
                },
                "NPCList": [
                    {
                        "NPCName": "Old Man Elric",
                        "description": "A mysterious hermit who knows the forest well. Wears a tattered cloak and has a long white beard.",
                        "dialogue": [
                            "The forest tests all who enter.",
                            "Choose your path wisely."
                        ],
                        "attack": 2,
                        "hasRangedAttack": true,
                        "health": 10,
                        "friend": true
                    }
                ],
                "itemList": [
                    {
                        "itemName": "Traveler's Map",
                        "description": "A rough sketch of the forest paths. Seems useful.",
                        "pickable": true,
                        "attack": 0,
                        "health": 0
                    }
                ],
                "doorList": [
                    {
                        "index": 2,
                        "spriteAddress": "Sprites/Door"
                    },
                    {
                        "index": 3,
                        "spriteAddress": "Sprites/Door"
                    }
                ]
            }
        },
        {
            "storyArc": "Rise",
            "levelIndex": 2,
            "storyline": "You venture deeper into the woods, guided by whispers.",
            "nextLevel": [
                {
                    "criteriaDescription": "Follow the river",
                    "index": 4
                },
                {
                    "criteriaDescription": "Climb the hill",
                    "index": 5
                }
            ],
            "entity": {
                "tileData": {
                    "r": 0.1,
                    "g": 0.5,
                    "b": 0.1,
                    "a": 1.0
                },
                "NPCList": [
                    {
                        "NPCName": "Whispering Spirit",
                        "description": "An ethereal figure that gestures toward unseen paths.",
                        "dialogue": [
                            "The river sings the truth.",
                            "The hill holds secrets."
                        ],
                        "attack": 1,
                        "hasRangedAttack": false,
                        "health": 8,
                        "friend": true
                    }
                ],
                "doorList": [
                    {
                        "index": 4,
                        "spriteAddress": "Sprites/Door"
                    },
                    {
                        "index": 5,
                        "spriteAddress": "Sprites/Door"
                    }
                ]
            }
        }
    ]
}
```