**INSTRUCTION:**  
Your task is to generate a **full JSON game setting** based on the following **INPUT**.

**Input Format:**  
You will be given a partial `"levelList"` following this structure:
```json
"levelList": [
    {
        "storyArc": "Rise",
        "levelIndex": 1,
        "storyline": "You find yourself at the edge of a dense, foggy forest. An old man leans on a wooden staff near a worn signpost.",
        "nextLevel": [
            {
                "criteriaDescription": "Take the left path",
                "index": 2
            },
            {
                "criteriaDescription": "Take the right path",
                "index": 3
            }
        ]
    },
    {
        "storyArc": "Rise",
        "levelIndex": 2,
        "storyline": "You venture deeper into the woods, guided by whispers.",
        "nextLevel": [
            {
                "criteriaDescription": "Follow the river",
                "index": 4
            },
            {
                "criteriaDescription": "Climb the hill",
                "index": 5
            }
        ]
    }
    // ... more levels
]
```

**Your Task:**  
Based on this input, complete the full JSON by adding the **missing fields** inside each level, specifically under an `"entity"` object.  
Each `"entity"` should include:

- `NPCList` (with characters, stats, dialogue)  
- `itemList` (optional, only if appropriate)  
- `doorList` (optional, only if appropriate)  

**Rules and Requirements:**  
1. Each `doorList`'s `index` must exactly match one of the `nextLevel`'s `index`.  
2. Use `-1` as the `index` when a path leads to an ending or menu instead of another level.  
3. NPCs should fit the story — give them names, descriptions, health, attack, friend/enemy status, and fun dialogue lines.  
4. Items are optional but should fit naturally if included. Items can modify attack, health, or be collectibles.  
5. Not all levels need doors or items — use them only where they make sense.  
6. Keep gameplay balanced (no overpowered NPCs or items unless justified by the story).  
7. You can be creative and add extra flavor through the NPCs and environment descriptions.  
8. Follow the given `"storyArc"`, `"levelIndex"`, and `"storyline"`, but you can expand with fitting details if needed.

**Example for Added Fields:**  
```json
"entity": {
    "tileData": {
        "r": 0.5,
        "g": 0.8,
        "b": 0.2,
        "a": 1.0
    },
    "NPCList": [
        {
            "NPCName": "Old Man Elric",
            "description": "A mysterious hermit who knows the forest well.",
            "dialogue": ["The forest tests all who enter."],
            "attack": 1,
            "hasRangedAttack": false,
            "health": 12,
            "friend": true,
            "door": 2
        }
    ],
    "itemList": [
        {
            "itemName": "Traveler's Map",
            "description": "A map of the nearby paths.",
            "pickable": true,
            "attack": 0,
            "health": 0
        }
    ],
    "doorList": [
        {
            "index": 2,
            "spriteAddress": "Sprites/Door"
        },
        {
            "index": 3,
            "spriteAddress": "Sprites/Door"
        }
    ]
}
```